@import './variables.scss';

@mixin adaptive-value(
	$property,
	$startSize,
	$minSize,
	$screen-min-size: 320,
	$type: 1
) {
	$addSize: $startSize - $minSize;
	@if $type == 1 {
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(
				#{$minSize + px} + #{$addSize} *
					(
						(100vw - #{$screen-min-size + px}) / #{$maxWidthContainer -
							$screen-min-size}
					)
			);
		}
	} @else if $type == 2 {
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(
				#{$minSize + px} + #{$addSize} *
					((100vw - #{$screen-min-size + px}) / #{$maxWidth - $screen-min-size})
			);
		}
	} @else {
		#{$property}: calc(
			#{$minSize +
				px} +
				#{$addSize} *
				((100vw - #{$screen-min-size + px}) / #{$maxWidth - $screen-min-size})
		);
	}
}

@mixin screen-lg-max {
	@media screen and (max-width: $screen-lg-max) {
		@content;
	}
}

@mixin screen-lg-min {
	@media screen and (min-width: $screen-lg-min) {
		@content;
	}
}

@mixin screen-xs-max {
	@media screen and (max-width: $screen-xs-max) {
		@content;
	}
}

@mixin screen-xs-min {
	@media screen and (min-width: $screen-xs-min) {
		@content;
	}
}
